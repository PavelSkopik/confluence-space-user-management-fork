## Copyright (c) 2006, Rajendra Kadam
## All rights reserved.
##
## Redistribution and use in source and binary forms, with or without
## modification, are permitted provided that the following conditions are
## met:
##
## Redistributions of source code must retain the above copyright notice,
## this list of conditions and the following disclaimer.  Redistributions
## in binary form must reproduce the above copyright notice, this list of
## conditions and the following disclaimer in the documentation and/or
## other materials provided with the distribution.  Neither the name of
## Cenqua Pty Ltd nor the names of its contributors may be used to
## endorse or promote products derived from this software without
## specific prior written permission.
##
## THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
## "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
## LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
## A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
## OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
## SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
## LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
## DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
## THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
## (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
## OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

<html>
    <head>
        <title>$action.getActionName($action.getClass().getName())</title>

	    <style>
			.userlink {color: #999999; text-decoration: none}
			.userlink a:link {color: #999999; text-decoration: none}
			.userlink a:visited {color: #999999; text-decoration: none}
			.userlink a:active {color: #999999; text-decoration: none}
			.userlink a:hover {color: #003366; text-decoration: none}

			div.pagecontent {}
			div#csumHeader {}
            div#csumHeader h2 {}
            div#csumHeader #adminConfigLink {display:block;}

			form#groupManagement {}
			form#groupManagement fieldset {}
			form#groupManagement fieldset label {}
			form#groupManagement fieldset input {}
			form#groupManagement fieldset span.fieldExample {display:block;}
			form#groupManagement fieldset span.fieldNotes {display:block;}
	    </style>
    </head>

    #applyDecorator("root")
        #decoratorParam("helper" $action.helper)
        #decoratorParam("context" "space-custom-usermanagement") ##note this should be same as item.key defined in atlassian-plugin.xml
        #decoratorParam("mode" "view-edit-spaceusergroups")
        
            <content tag="spacekey">$action.space.key</content>
            #set( $contextPath = "/customspacemgmt/permissions/custompermissionsmanage.action?key=${key}&" )

    <body>

		<script language="javascript">
			
			//If user has selected, "confluence-users" button then we want to disable Removebutton.
			//Because removing users from this default group will prevent them from logging into Confluence Wiki!			
		    function toggleRemoveButtonState(e)
		    {
		        if (e.checked == true)
		        {
		            document.getElementById('RemoveFromGroups').disabled = true;
		        }
		        else if (e.checked == false)
		        {
		            document.getElementById('RemoveFromGroups').disabled = false;
		        }
		    }
		    
		    function goToOtherWikis()
		    {	
		    	var selectedWikiSpaceKey = document.getElementById('allowedWikiSpacesId').value;
				location.href='$req.contextPath/customspacemgmt/permissions/custompermissionsmanage.action?key=' + selectedWikiSpaceKey;
		    }
		</script>
				    
<div class="pagecontent">
    <!-- actionerrors.vm is already included by space.vmd, hence it's not needed to add it here. -->
    <!-- Display result of operation if successful -->
    #parse ( "/templates/permissionmgmt/actionmessages.vm" )

    <div id="csumHeader">
        <h2>Manage users/user groups for $action.space.name ( $action.space.key )</h2>
        #if ($permissionHelper.isGlobalAdministrator($remoteUser))
             <a id="adminConfigLink" href="$req.contextPath/admin/plugins/custompermissionsconfig/config.action">Configure Custom Space Usergroups Manager Plugin</a>
        #end
    </div>

	#if($isPluginConfigurationDone)
	    #set ($groups = $action.UsersGroupsAssociatedForSpace)

        <form method="POST" action="docustompermissionsmanage.action?key=${key}" id="groupManagement" name="ManageUsersForm">
            #if ($groups.size() > 0)
                <fieldset>
                    #fielderror ('NotPermittedUserGroupsErrorMessage')
                    ##input userlist
                    #fielderror ('users')
                    <label>Input User IDs:</label>
                    <input type="text" id="users" name="users" value="$!action.users" />
                    <span class="fieldExample">Comma separated list of userids. Eg. ptusha,sachin,marykomb</span>
                    <span class="fieldNotes">Only <b>$action.maxUserIDsLimit</b> userids will be processed at a time.</span>
                </fieldset>

                #if ($action.customPermissionConfiguration.groupActionsPermitted == "YES")
                    <fieldset>
                        ##input userlist
                        #fielderror ('groupsToAdd')
                        <label>Input Group IDs:</label>
                        <input type="text" id="groups" name="groupsToAdd" value="$!action.groupsToAdd" />
                        <span class="fieldExample">Comma separated list of groupnames for addition. Eg. accounting,operations,developers</span>
                        <span class="fieldNotes">Only <b>$action.maxUserIDsLimit</b> groupids will be processed at a time.</span>
                    </fieldset>
                #end

                #fielderror ('groups_')
                <ul>
                #foreach ($group in $groups)
                    <li>
                        <input type="checkbox" name="groups_$group.name"
                            #if($action.isGroupSelected($group.name)) checked #end
                            #if($!group.name == "confluence-users") onclick="toggleRemoveButtonState(this)" #end
                        />$group.name ($action.findUserCountForUserGroup($group.name))
                        #if($!group.name == "confluence-users")
                            <!--we do not want to display list of confluence-users as they can be too many-->
                        #else
                            <!--<a href="docustompermissionsmanage.action?key=$action.space.key&selectedGroupName=$group.name" onClick="window.open(this.href,'users_group_association_window', 'width=620, height=800, resizable, scrollbars'); return false;" title="Users 'n Group  association">view users</a> -->
                            <span class="logoSpaceLink">
                                <a href="#" onClick="picker=window.open('custompermissionsusergroupsdisplay.action?key=$action.space.key&selectedGroupName=$group.name', 'UsersNamesDisplayer',  'status=yes,resizable=yes,top=100,left=200,width=580,height=550,scrollbars=yes'); picker.focus(); return false;">view users</a>
                            </span>
                        #end
                    </li>
                #end
                </ul>

        Select an Action ->
        #fielderror ('adminAction')
        <input type="radio" name="adminAction" #if ($action.adminAction == "AddToGroups") checked="true" #end value="AddToGroups"> Add Users to Selected Groups<b>*</b> &nbsp;
        <!-- Remove button will be disabled if user has pre-selected "confluence-users" user group! -->
        <input type="radio" name="adminAction" id="RemoveFromGroups" #if ($action.adminAction == "RemoveFromGroups") checked="true" #end #if($action.isGroupSelected("confluence-users")) disabled #end value="RemoveFromGroups"> Remove Users from Selected Groups<b>**</b>
            #if ($action.customPermissionConfiguration.groupActionsPermitted == "YES")
                <input type="radio" name="adminAction" #if ($action.adminAction == "AddGroups") checked="true" #end value="AddGroups"> Add New Groups &nbsp;
                <input type="radio" name="adminAction" #if ($action.adminAction == "RemoveGroups") checked="true" #end value="RemoveGroups"> Remove Groups &nbsp;
            #end
        <fieldset>
            <input type="submit" name="Process" value="Process" accesskey="S" />
            <input id="cancelButton"  type="button"
                   accesskey="`"
                   title="Cancel (Alt + `)"
                   name="Go to Space Home Page"
                   value="Cancel"
                   onclick="location.href='$req.contextPath/display/${key}'"
             />
         </fieldset>

        </form>
        <div>
            *  - New users will be added to Wiki provided Confluence Administrator has enabled LDAP Settings.<br/>
            ** - users can not be removed from default user group "confluence-users". Hence upon selection of this group, "Remove..." option will be disabled
        </div>

        #else
        <div>
        You can not manage user-groups associated with this wiki space. Please check with Confluence Administrators.</font>
        </div>
     #end

    #set ($wikispaces = $action.spacesAsSpaceAdminForUser)

	#if($wikispaces.size() > 0)
		<form method="GET" action="custompermissionsmanage.action" name="ManageOtherWikiSpacesForm">
            <label>Do you want to manage users for other Wiki spaces?</label>
            <select id="allowedWikiSpacesId" name="allowedWikiSpaces">
                #foreach ($wikispace in $wikispaces)
                    <option value="$wikispace.key" #if($wikispace.key == $action.space.key) selected #end >$wikispace.name ($wikispace.key)</option>
                #end
            </select>
            <input type="button" name="ManageOtherWikis" value="Manage Other Wikis" onclick="goToOtherWikis()" />
		</form>
    #end

    #else
        #if($customPermissionConfiguration.pluginDown == "yes")
            $customPermissionConfiguration.downTimeMessage
		#else
		    <h4>An administrator must configure "Custom Space Usergroups Manager" before you start using it.</h4>
		#end

		#if ($permissionHelper.isGlobalAdministrator($remoteUser))
		    <a href="$req.contextPath/admin/plugins/custompermissionsconfig/config.action">Configure "Custom Space Usergroups Manager" Plugin</a>
		#end
	#end

    #parse ( "/admin/admin-breadcrumbs.vm" )
</div>
</body>
#end
</html>

