## Copyright (c) 2007, Custom Space User Management Plugin Development Team
## All rights reserved.
##
## Redistribution and use in source and binary forms, with or without
## modification, are permitted provided that the following conditions are met:
##
##     * Redistributions of source code must retain the above copyright notice,
##       this list of conditions and the following disclaimer.
##     * Redistributions in binary form must reproduce the above copyright
##       notice, this list of conditions and the following disclaimer in the
##       documentation and/or other materials provided with the distribution.
##     * Neither the name of the Custom Space User Management Plugin Development Team
##       nor the names of its contributors may be used to endorse or promote
##       products derived from this software without specific prior written permission.
##
## THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
## AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
## IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
## ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
## LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
## CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
## SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
## POSSIBILITY OF SUCH DAMAGE.

## @author Rajendra Kadam
## @author Ren Provey
## @author Gary S. Weaver

<!-- start display -->
<html>
    <head>
        <title>$action.getActionName($action.getClass().getName())</title>
    </head>

    #applyDecorator("root")
        #decoratorParam("helper" $action.helper)
        #decoratorParam("context" "space-custom-usermanagement") ##note this should be same as item.key defined in atlassian-plugin.xml
        #decoratorParam("mode" "view-edit-spaceUser")
        
            <content tag="spacekey">${action.space.key}</content>

    ## This is for later versions of Confluence (v2.8+)
    #if($action.isConfluenceVersionEqualToOrAbove("2.8"))
        #requireResource("raju.kadam.confluence.permissionmgmt:csumresources")
    #end

    ##set( $contextPath = "/customspacemgmt/permissions/custompermissionsmanage.action?key=$generalUtil.doubleUrlEncode($key)&" )

    #set( $refreshbugworkaround = "&redirect=" )

    <body>
        ## This is for earlier versions of Confluence (pre-v2.8)                                
		<script type="text/javascript" src="$req.contextPath/download/resources/$action.pluginKey/js/yahoo-dom-event.js"></script>
		<script type="text/javascript" src="$req.contextPath/download/resources/$action.pluginKey/js/element-beta-min.js"></script>        
		<script type="text/javascript" src="$req.contextPath/download/resources/$action.pluginKey/js/container-min.js"></script>

		<link rel="stylesheet" href="$req.contextPath/download/resources/$action.pluginKey/css/csum.css" type="text/css" media="screen" title="no title" charset="utf-8">

		<script>
		YAHOO.namespace("ifs");

		var trashLinkInterception = function(e) {
			YAHOO.util.Event.preventDefault(e);
                        var targetLink = document.getElementById("trashGroup").href

			groupTrashDialog = new YAHOO.widget.SimpleDialog("dlg", { 
				width: "25em", 
				//effect:[{effect:YAHOO.widget.ContainerEffect.FADE, 
				//		duration:0.25}],
				fixedcenter:true,
				modal:true,
				draggable:false } );
			groupTrashDialog.setHeader("Confirm Group Deletion");
			groupTrashDialog.setBody("Are you sure you want to delete this group?");

			var handleYes = function() {
			 window.location = targetLink;
			 this.hide();
			};

			var handleNo = function() {
			 //user cancels item deletion
			 this.hide();
			};

			var trashButtons = [ { text:"Yes", handler:handleYes },
							  { text:"Cancel", handler:handleNo, isDefault:true } 
							];

			groupTrashDialog.cfg.queueProperty("buttons", trashButtons);
			groupTrashDialog.render(document.body);
		};
		
		function validateForm(e, form)
		{
			var valid = true;
			var fields = form.getElementsByTagName("input");


			// Check text input				
			for ( var i = 0; i < fields.length; i++ ){
				if (fields[i].getAttribute("required") === "true" && fields[i].getAttribute("type") === "text" && fields[i].value == "" && fields[i].id !== "") {
					var field = new YAHOO.util.Element(fields[i].id);
					field.addClass("attention");
					valid = false;		
				} else if (fields[i].hasAttribute("required") && fields[i].id !== "") {
					var field = new YAHOO.util.Element(fields[i].id);
					field.removeClass("attention");
				}
			}

			var isBulkForm;
			for ( var i = 0; i < fields.length; i++ ){
				if (fields[i].getAttribute("type") === "radio") {
					isBulkForm = true;
				}
			}

			if (isBulkForm === true){
				// Handle bulk form radio buttons
				var bcl = new YAHOO.util.Element('bulkChooseWrap');
				if(!document.forms['bulkEdit'].elements[3].checked && !document.forms['bulkEdit'].elements[4].checked){
					valid = false;					
					bcl.addClass("attention");
				} else {
					bcl.removeClass("attention");
				}

				// Handle bulk check boxes
				var listSelected;
				for ( var i = 0; i < fields.length; i++ ){
					if (fields[i].getAttribute("type") === "checkbox" && fields[i].checked === true) {
						listSelected = true;
					}
				}

				var cbl = new YAHOO.util.Element('bulkCheckboxWrap');
				if(listSelected !== true){
					valid = false;					
					cbl.addClass("attention");
				} else {
					cbl.removeClass("attention");
				}

			} //End extra bulk checks


			// If all tests have passed continue form submission
			if (valid !== true) {
				alert("Please correct the fields with an red background.");
				YAHOO.util.Event.preventDefault(e);
			}
		}
		
		YAHOO.util.Event.addListener("trashGroup", "click", trashLinkInterception);
		YAHOO.util.Event.addListener(window, "load", YAHOO.ifs.init);
		</script>

		<!--[if IE]>
			<style>
				div#csum div#groupEditor {width:505px;}
			</style>
		<![endif]-->

<div id="csum">

  #if($action.isNotAllowed())
    <div class="alertPanel">

    <img src="/images/icons/emoticons/forbidden.gif" align="absmiddle" width="16" height="16">

    $action.getText("csum.display.alert.notallowed")

    </div>
  #elseif($action.isPluginDown())
    ## this is either the message set in config, or is an i18n message if config message is empty
    <div class="alertPanel">

    <img src="/images/icons/emoticons/forbidden.gif" align="absmiddle" width="16" height="16">

    $action.pluginDownMessage

    </div>
  #elseif(!$action.space)
    ## this happens whenever action.getSpace() returns null (as for a bad space key).
    <div class="alertPanel">

    <img src="/images/icons/emoticons/forbidden.gif" align="absmiddle" width="16" height="16">

    $action.getText("csum.display.alert.invalidspacekey")

    </div>
  #elseif(!$action.remoteUser)
    ## this is not likely to happen since confluence security keeps you from viewing this page as anyone without
    ## rights to the space. It is included just in case for some reason a user gets through that security with a null user.
    <div class="alertPanel">

    <img src="/images/icons/emoticons/forbidden.gif" align="absmiddle" width="16" height="16">

    $action.getText("csum.display.alert.invaliduser")

    </div>
  #else
    <div class="messages">
		## Action errors are already displayed at top of page under tab because this is part of space management
		## which already includes it
		##parse ( "/template/includes/actionerrors.vm" )
       <!-- Display result of operation if successful -->
        ## NOTE: This template is required for Confluence 2.3.x compatibility. (In later versions, Confluence implemented it.)
		#parse ( "/templates/permissionmgmt/actionmessages.vm" )
	</div>

    #set($configValidationResponse=$action.configValidationResponse)
	#if($configValidationResponse.isValid())

    <div id="groups">
        #parse( "/templates/permissionmgmt/group-list.vm" )
    </div>
        
        <div id="groupEditor">
        #if($action.userSearch)
            #parse ( "/templates/permissionmgmt/manage-users-advanced.vm" )
        #elseif($action.bulkEdit)
            #parse ( "/templates/permissionmgmt/bulk-edit.vm" )
        #else
            #if(${action.selectedGroup})
                #parse ( "/templates/permissionmgmt/manage-users-basic.vm" )
            #end
        #end
        </div>
<div style="clear:both"></div>
        <div id="footer">
				<ul>
				#if($groups && $groups.total>0)
			        <li><a href="docustompermissionsmanage.action?key=$generalUtil.doubleUrlEncode($key)&bulkEdit=1">$action.getText("csum.display.bulkedit")</a> </li>
			        #*
					#if($action.isUserSearchEnabled)
					<li>| <a href="docustompermissionsmanage.action?key=$generalUtil.doubleUrlEncode($key)&userSearch=1">$action.getText("csum.searchUsers.link.title")</a> </li>
					#end
					*#
			    #end

			    #if($isGroupActionsPermitted)
					<li>
					#if($groups && $groups.total>0)
					 |
					#end
					<a href="${req.contextPath}/spaces/spacepermissions.action?key=$generalUtil.doubleUrlEncode($key)">
						#*<img src="${req.contextPath}/images/icons/lock_16.gif"/>*#
						$action.getText("csum.display.spacepermissions")</a> </li>
					#*<li>| <a href="${req.contextPath}/pages/listpermissionpages.action?key=$generalUtil.doubleUrlEncode($key)">
						<img src="${req.contextPath}/images/icons/locked_pages_16.gif"/>
						$action.getText("csum.page.permissions.link.title")</a> </li>*#
			    #end

                #if($action.selectedGroup)
                <li>| <a href="docustompermissionsmanage.action?key=$generalUtil.doubleUrlEncode($key)&selectedGroup=$generalUtil.doubleUrlEncode($selectedGroup)&refresh=1">$action.getText("csum.display.refresh")</a> </li>
                #else
                <li>| <a href="docustompermissionsmanage.action?key=$generalUtil.doubleUrlEncode($key)&refresh=1">$action.getText("csum.display.refresh")</a> </li>
                #end
			        
				</ul>

                #set($availableSpaces = $action.spacesAsSpaceAdminForUser)
	            #if($availableSpaces && $availableSpaces.size()>1)
                <form method="GET" action="docustompermissionsmanage.action" id="changeSpace" name="changeSpace">
	                <fieldset>
	                    <label>$action.getText("csum.display.changespace.label"): </label>
	                    <select name="key">
	                        #foreach ($availableSpace in $availableSpaces)
	                        <option value="$availableSpace.key" #if($availableSpace.key==$action.space.key)selected="true"#end>$generalUtil.htmlEncode($availableSpace.name) ($generalUtil.htmlEncode($availableSpace.key))</option>
	                        #end
	                    </select>
	                	<input type="submit" value='$action.getText("csum.display.changespace")' class="submitBttn"/>
	                </fieldset>
	            </form>
	            #end				
		</div>
    #else
        <p class="noteMacro">
        <p>$action.getText("csum.display.error.adminmustconfigure") <a href="$req.contextPath/admin/plugins/custompermissionsconfig/config.action">$action.getText("csum.display.error.adminmustconfigure.linktoconfigurator")</a>.</p>
        <p>$action.getText("csum.display.error.adminmustconfigure.errormessages.title"):</p>
            #set($fieldNameToErrorMessage=$configValidationResponse.fieldNameToErrorMessage)
            <ul>
            #foreach($configFieldName in $fieldNameToErrorMessage.keySet())
                <li>$configFieldName: $fieldNameToErrorMessage.get($configFieldName)</li>
            #end
            </ul>
        </p>
    #end

    #parse ( "/admin/admin-breadcrumbs.vm" )

    ## show action info, cache for debugging using request param &debug once (have to kill session after that to stop debugging)
    #set($actionDebug=$action.actionDebug)
    #if($actionDebug)
        $actionDebug
    #end

  #end

<div style="clear:both"></div>

#end
</div>
<!-- end display -->

</body>
</html>